"use strict";(self.webpackChunkrunar_docs=self.webpackChunkrunar_docs||[]).push([[8703],{8905:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"features/keys-management","title":"Runar Key Management System","description":"This document describes the comprehensive key management system in Runar, including PKI infrastructure, envelope encryption, and mobile key management capabilities.","source":"@site/docs/features/keys-management.md","sourceDirName":"features","slug":"/features/keys-management","permalink":"/rust-docs/docs/features/keys-management","draft":false,"unlisted":false,"editUrl":"https://github.com/runar-labs/runar-rust/tree/main/rust-docs/markdown/docs/features/keys-management.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Enhanced Serialization with Selective Field Encryption","permalink":"/rust-docs/docs/features/enhanced-serialization"},"next":{"title":"Logging Framework Usage Guidelines","permalink":"/rust-docs/docs/features/logging"}}');var t=r(4848),s=r(8453);const a={},l="Runar Key Management System",c={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"PKI Infrastructure",id:"pki-infrastructure",level:2},{value:"Certificate Hierarchy",id:"certificate-hierarchy",level:3},{value:"Certificate Standards",id:"certificate-standards",level:3},{value:"QUIC Transport Security",id:"quic-transport-security",level:3},{value:"Key Classes",id:"key-classes",level:2},{value:"Key Derivation",id:"key-derivation",level:3},{value:"Mobile Key Management",id:"mobile-key-management",level:2},{value:"Core Operations",id:"core-operations",level:3},{value:"Key Generation and Management",id:"key-generation-and-management",level:3},{value:"Certificate Authority Operations",id:"certificate-authority-operations",level:3},{value:"Envelope Encryption",id:"envelope-encryption",level:3},{value:"Node Key Management",id:"node-key-management",level:2},{value:"Core Operations",id:"core-operations-1",level:3},{value:"Certificate Management",id:"certificate-management",level:3},{value:"Network Key Management",id:"network-key-management",level:3},{value:"Local Storage Encryption",id:"local-storage-encryption",level:3},{value:"Envelope Encryption",id:"envelope-encryption-1",level:2},{value:"Envelope Structure",id:"envelope-structure",level:3},{value:"Encryption Process",id:"encryption-process",level:3},{value:"Decryption Process",id:"decryption-process",level:3},{value:"Certificate Workflow",id:"certificate-workflow",level:2},{value:"Phase 1: CA Initialization",id:"phase-1-ca-initialization",level:3},{value:"Phase 2: Node Certificate Issuance",id:"phase-2-node-certificate-issuance",level:3},{value:"Phase 3: QUIC Transport Setup",id:"phase-3-quic-transport-setup",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Key Separation",id:"key-separation",level:3},{value:"Forward Secrecy",id:"forward-secrecy",level:3},{value:"Compromise Impact",id:"compromise-impact",level:3},{value:"Backup and Recovery",id:"backup-and-recovery",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Mobile Key Manager",id:"mobile-key-manager",level:3},{value:"Node Key Manager",id:"node-key-manager",level:3},{value:"Certificate Authority",id:"certificate-authority",level:3},{value:"Certificate Validator",id:"certificate-validator",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"runar-key-management-system",children:"Runar Key Management System"})}),"\n",(0,t.jsx)(n.p,{children:"This document describes the comprehensive key management system in Runar, including PKI infrastructure, envelope encryption, and mobile key management capabilities."}),"\n",(0,t.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#pki-infrastructure",children:"PKI Infrastructure"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#key-classes",children:"Key Classes"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#mobile-key-management",children:"Mobile Key Management"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#node-key-management",children:"Node Key Management"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#envelope-encryption",children:"Envelope Encryption"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#certificate-workflow",children:"Certificate Workflow"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#security-considerations",children:"Security Considerations"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#api-reference",children:"API Reference"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"Runar implements a production-ready key management system that provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"PKI Infrastructure"}),": X.509 certificate-based identity and authentication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Mobile Key Management"}),": Self-custodied keys with mobile wallet integration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Envelope Encryption"}),": Multi-recipient encryption for cross-device data sharing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Local Encryption"}),": Secure local storage encryption"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile-based Access Control"}),": User profile keys for personal/work/family data"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The system is designed for end-to-end encryption where data remains encrypted from producer to consumer, with keys managed by users through their mobile devices."}),"\n",(0,t.jsx)(n.h2,{id:"pki-infrastructure",children:"PKI Infrastructure"}),"\n",(0,t.jsx)(n.h3,{id:"certificate-hierarchy",children:"Certificate Hierarchy"}),"\n",(0,t.jsx)(n.p,{children:"Runar uses a hierarchical PKI system with the following structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Mobile User CA (Self-signed root certificate)\n\u2514\u2500\u2500 Node TLS Certificate (signed by Mobile CA)\n    \u2514\u2500\u2500 Used for all QUIC/TLS operations\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificate-standards",children:"Certificate Standards"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Algorithm"}),": ECDSA P-256 throughout the entire system"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Certificate Format"}),": Standard X.509 with proper extensions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CSR Format"}),": PKCS#10 Certificate Signing Requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encoding"}),": DER encoding for all certificate storage and transmission"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Compliance"}),": Full compliance with RFC 5280 and related standards"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"quic-transport-security",children:"QUIC Transport Security"}),"\n",(0,t.jsx)(n.p,{children:"The system provides QUIC/TLS compatibility through:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Certificate Chains"}),": Node certificate + CA certificate"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Private Key Format"}),": PKCS#8 compatible with rustls/Quinn"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Certificate Validation"}),": Full cryptographic validation with DN normalization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Peer Authentication"}),": Mutual authentication during QUIC handshake"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-classes",children:"Key Classes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Class"}),(0,t.jsx)(n.th,{children:"Purpose"}),(0,t.jsx)(n.th,{children:"Storage Location"}),(0,t.jsx)(n.th,{children:"Derivation"}),(0,t.jsx)(n.th,{children:"Algorithm"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"User Root Key"})}),(0,t.jsx)(n.td,{children:"Master key for mobile wallet"}),(0,t.jsx)(n.td,{children:"Mobile device (secure storage)"}),(0,t.jsx)(n.td,{children:"Random generation"}),(0,t.jsx)(n.td,{children:"ECDSA P-256"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"User Profile Keys"})}),(0,t.jsx)(n.td,{children:"Personal/work/family profiles"}),(0,t.jsx)(n.td,{children:"Mobile device"}),(0,t.jsx)(n.td,{children:"Derived from root key"}),(0,t.jsx)(n.td,{children:"ECDSA P-256"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Node Storage Keys"})}),(0,t.jsx)(n.td,{children:"Local node encryption"}),(0,t.jsx)(n.td,{children:"Node (encrypted storage)"}),(0,t.jsx)(n.td,{children:"32-byte random"}),(0,t.jsx)(n.td,{children:"AES-256"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Network Data Keys"})}),(0,t.jsx)(n.td,{children:"Cross-network sharing"}),(0,t.jsx)(n.td,{children:"Mobile + Node"}),(0,t.jsx)(n.td,{children:"Derived from root key"}),(0,t.jsx)(n.td,{children:"ECDSA P-256"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Envelope Keys"})}),(0,t.jsx)(n.td,{children:"Ephemeral per-object"}),(0,t.jsx)(n.td,{children:"Generated on-demand"}),(0,t.jsx)(n.td,{children:"Ephemeral"}),(0,t.jsx)(n.td,{children:"AES-256-GCM"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"key-derivation",children:"Key Derivation"}),"\n",(0,t.jsx)(n.p,{children:"Profile keys are derived using HKDF from the user root key:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Example key derivation\nlet root_key = self.user_root_key.as_ref()?;\nlet root_key_bytes = root_key.private_key_der()?;\nlet hk = Hkdf::<Sha256>::new(None, &root_key_bytes);\n\nlet info = format!("runar-profile-{}", profile_id);\nlet mut derived_key = [0u8; 32];\nhk.expand(info.as_bytes(), &mut derived_key)?;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"mobile-key-management",children:"Mobile Key Management"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"MobileKeyManager"})," provides comprehensive key management for mobile devices:"]}),"\n",(0,t.jsx)(n.h3,{id:"core-operations",children:"Core Operations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct MobileKeyManager {\n    ca_key_pair: EcdsaKeyPair,\n    ca_certificate: X509Certificate,\n    user_keys: HashMap<String, EcdsaKeyPair>,\n    network_keys: HashMap<String, EcdsaKeyPair>,\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"key-generation-and-management",children:"Key Generation and Management"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"User Root Key Initialization"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let user_root_public_key = mobile.initialize_user_root_key()?;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Profile Key Derivation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'let profile_personal_key = mobile.derive_user_profile_key("personal")?;\nlet profile_work_key = mobile.derive_user_profile_key("work")?;\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Network Key Generation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let network_id = mobile.generate_network_data_key()?;\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"certificate-authority-operations",children:"Certificate Authority Operations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CSR Processing"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let cert_message = mobile.process_setup_token(&setup_token)?;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Certificate Issuance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validates CSR structure and signature"}),"\n",(0,t.jsx)(n.li,{children:"Signs with OpenSSL using CA private key"}),"\n",(0,t.jsx)(n.li,{children:"Creates X.509 certificate with proper extensions"}),"\n",(0,t.jsx)(n.li,{children:"Returns certificate + CA certificate"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"envelope-encryption",children:"Envelope Encryption"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:'// Encrypt data for network and profiles\nlet envelope = mobile.encrypt_with_envelope(\n    test_data,\n    &network_id,\n    vec!["personal".to_string(), "work".to_string()],\n)?;\n\n// Decrypt using profile key\nlet decrypted = mobile.decrypt_with_profile(&envelope, "personal")?;\n'})}),"\n",(0,t.jsx)(n.h2,{id:"node-key-management",children:"Node Key Management"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"NodeKeyManager"})," provides key management for nodes:"]}),"\n",(0,t.jsx)(n.h3,{id:"core-operations-1",children:"Core Operations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct NodeKeyManager {\n    node_key_pair: EcdsaKeyPair,\n    node_certificate: Option<X509Certificate>,\n    ca_certificate: Option<X509Certificate>,\n    certificate_validator: Option<CertificateValidator>,\n    network_keys: HashMap<String, EcdsaKeyPair>,\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificate-management",children:"Certificate Management"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CSR Generation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let setup_token = node.generate_csr()?;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Certificate Installation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"node.install_certificate(cert_message)?;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"QUIC Configuration"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let quic_config = node.get_quic_certificate_config()?;\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"network-key-management",children:"Network Key Management"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Network Key Installation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"node.install_network_key(network_key_message)?;\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Envelope Decryption"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"let decrypted = node.decrypt_envelope_data(&envelope)?;\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"local-storage-encryption",children:"Local Storage Encryption"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"// Encrypt local data\nlet encrypted = node.encrypt_local_data(file_data)?;\n\n// Decrypt local data\nlet decrypted = node.decrypt_local_data(&encrypted)?;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"envelope-encryption-1",children:"Envelope Encryption"}),"\n",(0,t.jsx)(n.p,{children:"Envelope encryption provides multi-recipient access control for cross-device data sharing."}),"\n",(0,t.jsx)(n.h3,{id:"envelope-structure",children:"Envelope Structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct EnvelopeEncryptedData {\n    pub encrypted_data: Vec<u8>,           // AES-GCM encrypted payload\n    pub network_id: String,                // Network identifier\n    pub network_encrypted_key: Vec<u8>,    // Network key encrypted with node key\n    pub profile_encrypted_keys: HashMap<String, Vec<u8>>, // Profile keys encrypted with user keys\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"encryption-process",children:"Encryption Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generate Ephemeral Key"}),": Create a random AES-256 key for the data"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encrypt Data"}),": Use AES-GCM to encrypt the payload with the ephemeral key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encrypt for Network"}),": Encrypt the ephemeral key with the network key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Encrypt for Profiles"}),": Encrypt the ephemeral key with each profile's public key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Assemble Envelope"}),": Combine all encrypted components"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"decryption-process",children:"Decryption Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Decryption"}),": Node decrypts ephemeral key using network key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile Decryption"}),": Mobile decrypts ephemeral key using profile key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Decryption"}),": Use ephemeral key to decrypt the payload"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"certificate-workflow",children:"Certificate Workflow"}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-ca-initialization",children:"Phase 1: CA Initialization"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    A[Mobile App Start] --\x3e B[Generate ECDSA P-256 Key Pair]\n    B --\x3e C[Create Self-signed CA Certificate]\n    C --\x3e D[CA Ready to Issue Certificates]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-node-certificate-issuance",children:"Phase 2: Node Certificate Issuance"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant M as Mobile CA\n    participant N as Node\n    \n    N->>N: Generate ECDSA key pair\n    N->>N: Create PKCS#10 CSR\n    N->>M: Send CSR in setup token\n    M->>M: Validate CSR\n    M->>M: Sign CSR with OpenSSL\n    M->>M: Create X.509 certificate\n    M->>N: Send certificate + CA cert\n    N->>N: Install and validate certificates\n    N->>N: Ready for QUIC transport\n"})}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-quic-transport-setup",children:"Phase 3: QUIC Transport Setup"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant N1 as Node 1\n    participant N2 as Node 2\n    \n    Note over N1,N2: Both nodes have certificates from same CA\n    \n    N1->>N2: QUIC connection with TLS handshake\n"})}),"\n",(0,t.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"key-separation",children:"Key Separation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Signing vs Encryption"}),": Separate keys for different purposes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile Isolation"}),": Each profile has independent keys"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Isolation"}),": Network keys are isolated per network"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Isolation"}),": Node keys are local to each node"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"forward-secrecy",children:"Forward Secrecy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ephemeral Keys"}),": Envelope encryption uses ephemeral keys"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Key Rotation"}),": Network keys can be rotated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile Rotation"}),": Profile keys can be re-derived"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"compromise-impact",children:"Compromise Impact"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Root Key"}),": Full account compromise"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Key"}),": Local node data compromise only"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Key"}),": Network data compromise only"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile Key"}),": Profile data compromise only"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"backup-and-recovery",children:"Backup and Recovery"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Root Key"}),": Must be backed up securely (seed phrase)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile Keys"}),": Re-derivable from root key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Network Keys"}),": Re-derivable from root key"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Keys"}),": Local to node, not backed up"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api-reference",children:"API Reference"}),"\n",(0,t.jsx)(n.h3,{id:"mobile-key-manager",children:"Mobile Key Manager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct MobileKeyManager {\n    // Initialize with self-signed CA certificate\n    pub fn new(logger: Arc<Logger>) -> Result<Self>;\n    \n    // Generate user root key\n    pub fn initialize_user_root_key(&mut self) -> Result<Vec<u8>>;\n    \n    // Process node CSR and issue certificate\n    pub fn process_setup_token(&mut self, token: &SetupToken) -> Result<NodeCertificateMessage>;\n    \n    // Generate network data key\n    pub fn generate_network_data_key(&mut self) -> Result<String>;\n    \n    // Create network key message for node\n    pub fn create_network_key_message(&self, network_id: &str, node_id: &str) -> Result<NetworkKeyMessage>;\n    \n    // Derive user profile key\n    pub fn derive_user_profile_key(&mut self, profile_id: &str) -> Result<Vec<u8>>;\n    \n    // Envelope encryption\n    pub fn encrypt_with_envelope(&self, data: &[u8], network_id: &str, profile_ids: Vec<String>) -> Result<EnvelopeEncryptedData>;\n    \n    // Profile decryption\n    pub fn decrypt_with_profile(&self, envelope: &EnvelopeEncryptedData, profile_id: &str) -> Result<Vec<u8>>;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"node-key-manager",children:"Node Key Manager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct NodeKeyManager {\n    // Generate node identity and CSR\n    pub fn new(logger: Arc<Logger>) -> Result<Self>;\n    pub fn generate_csr(&mut self) -> Result<SetupToken>;\n    \n    // Install certificate from mobile\n    pub fn install_certificate(&mut self, cert_message: NodeCertificateMessage) -> Result<()>;\n    \n    // Install network key from mobile\n    pub fn install_network_key(&mut self, key_message: NetworkKeyMessage) -> Result<()>;\n    \n    // Get QUIC certificate configuration\n    pub fn get_quic_certificate_config(&self) -> Result<QuicCertificateConfig>;\n    \n    // Envelope decryption\n    pub fn decrypt_envelope_data(&self, envelope: &EnvelopeEncryptedData) -> Result<Vec<u8>>;\n    \n    // Local storage encryption\n    pub fn encrypt_local_data(&self, data: &[u8]) -> Result<Vec<u8>>;\n    pub fn decrypt_local_data(&self, encrypted_data: &[u8]) -> Result<Vec<u8>>;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificate-authority",children:"Certificate Authority"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct CertificateAuthority {\n    // Create CA with self-signed certificate\n    pub fn new(subject: &str) -> Result<Self>;\n    \n    // Sign CSR using OpenSSL to create proper X.509 certificate\n    pub fn sign_certificate_request(&self, csr_der: &[u8], validity_days: u32) -> Result<X509Certificate>;\n    \n    // Get CA certificate for distribution\n    pub fn ca_certificate(&self) -> &X509Certificate;\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"certificate-validator",children:"Certificate Validator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"pub struct CertificateValidator {\n    // Full cryptographic validation with DN normalization\n    pub fn validate_certificate(&self, certificate: &X509Certificate) -> Result<()>;\n    \n    // Complete certificate chain validation\n    pub fn validate_certificate_chain(&self, certificate: &X509Certificate, chain: &[X509Certificate]) -> Result<()>;\n    \n    // TLS-specific validation\n    pub fn validate_for_tls_server(&self, certificate: &X509Certificate) -> Result<()>;\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.em,{children:["This documentation reflects the current implementation as of the latest release. For implementation details, see the end-to-end tests in ",(0,t.jsx)(n.code,{children:"runar-keys/tests/end_to_end_test.rs"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Last updated: 2025-01-27"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);